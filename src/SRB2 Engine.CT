<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">os[YU):Zf:Uz1#uHszKR$G{n^1__g6iM/W/D7w-?bGiiyIjL!@rgr5xSIW%5zybps3kwo63.zKdj7(?^osbwAfYfo*MruzdCOc8:=_c3_:dS[a[S-j1+SXVXd{18mZr=PH?DrhbDV6VHG75x#v820fs:tDr6EYNm^:8)j7$0KZ?fnTmnnwonNZ=5q*41x9E{;+Xo=%d54a7XeX3dLS#:.Xqhiqm#XetP!Wn.Of:7a:Ok/.w-IfGpo1Z;u!E^eu2#7!#[(2Wb15mXZCRxAXgm29HiKZA1D4y5_]O#LI_:yFpC/Og/{QE@;.eZ{n21n!T]z2!kX(bO5;t9]@1ujK.Ea+?_tR.K{M5@1C(A99haOA,lL[0UAFvD:_O$0*,{hlGxzg3iw@I+l]QN(r?)bA(t]T53#BMKd#)Thir@a)S=p28sNF!8bdFI4oq]S_/Y73FeTqc-mr5=bTGl@sIY,fTUeh3A{]2,,U#)[X{8,qDh1kV1Jw//kZU%Mpn/_b%ORNucuOP5=.R-Po^.UE=LR328fQZxv$PO-#LB1HR(xvjg3MTC3Kt%ne^:*W=gn)oyJ*?NzyXvKB6+eIjRfrChxmy?$UYDY73v?uonx:(9ZlTpHaLc/24qG1r,jLvGffn*#9%,l;ScsC$vwh=A]w(85^ank:^eGfq$!--mWgS/-_PM*t^fci^T#</UDF1>
    <UDF2 Class="TCEForm" Encoding="Ascii85">Rgg/g!!Qs*oeyzJ%A#VywhPu3@aPN!QIU#Tksy{fCey@KYgf*xqIc,7H}/=qT!nj)ZxJhxJ*U]Q:F:b}UWPX]4yK^fTl.wuj[o/D)fTr,8SpGe@UaFY(iWu^FFeKEIvSp?bPD/+QL@y+D.@yRgzY29J!w-B9t2Q#RZKV(Dx)40Ay=A5h(c*v204:%:zbtLNbE3PbL{XkS4#PNL=wG(a9g^X;rU.uQZvV]++7[X]Vrvpz8Ka#FH^moZOIQ@$P$!n:w(tR;#249c*n!1bf@kkH*g9vHH{FKsWvoCInw56MMj.-RV@{TMedBhTEmXv9UVJ+@2crjB0^Fow0mVZ2bp1Rl0o%j#v5#*gwm8I!WS(r^7W?kb:HNiL_Qui0s</UDF2>
    <UDF3 Class="TCEForm" Encoding="Ascii85">i)p]22nldAU:MM2b.}cxWeIh0GiLEgO*FtO%+f]Enwg$a!u+nf#UnGXgpJw7#f3Q{zkvBL18aC?N:XKDKNGuiVnIn{ejXcGC#!RQPJR*KzW#rpxc}</UDF3>
    <UDF4 Class="TCEForm" Encoding="Ascii85">RnfmrgFpZV?Z)Plg=6%wTNe]-jV6wb1GFefYpbPkG)gYx.(E5uFsYAW.$q@H7zZD}-4{2-I,-^K$5Cav/KXW5-N(g6fH!vbG_%okG;,71(pA+B?RBKQxqb{Me8H3tpm:ntyn?.{nz4m*D4Q0IXE1g^N*odfpvfv;Fd9OV8UY$2f,BPaf%s}_Rv2n{kW3JnXEWPhGDJze;5]ozKZ2cnU)=1261Gk;i^}:1W;ZXKb:!FcK,mjWpFpgOalZiHffB4rIavM^-nL^_?CIUjhE?-.g.Q7!RHaH[TM}h14]09;]+HS$FX,1G2c!H{S#gaFVx@2x)kLedMQ#a,,}v)ZmCgNt[3d?^#2!q0^f/a[x(8#ELkZgzTi;*1$xPvuwvqpoi++EFGzwI^p/=3g4E%t%!$)2tmZUA-(886D_A_]s.Eqc_oX)*ZErkt$$ExkU)#d}ICIG)</UDF4>
    <UDF5 Class="TCEForm" Encoding="Ascii85">J(-,4!$1(*2Rrc@I}4})P$0RE!Ac{TY^e*g@3OmPHZ#$B6BH[H8qPt[323Rf5(nr(=Yz.]zW2==2_yZ07a_RBBG(7^^dIITxWz_fe[751//rX8pJ1oFvHxJWl%-kOKj4p9m#C*(Q^_6xx!6_++E6K8m(:)Xxt4F)yB21zP;k^[WmZc]CBKR:,Zf5?oKEQ)i*I^!N,OwKq}Ga2aTu}/JqUsTz@%+18KH6y?1,xNb.Vlvg]Q,o#w@LS6qe^A-dhMu92maA8^-bud{}k)C+R#M.jxy{*jEVGNdjKPWX?YHM4@?_Y0z)X-T(6FA7^EQ,+)_)6OF-j):4Aihp/4+sm3Z@#94FahrWKh1Au:</UDF5>
    <UDF6 Class="TCEForm" Encoding="Ascii85">-Iq.o)={S^9Xqj.2I8thKzm5D@oABlouu0!QK=Dk0xGmh4M:.b^4z-[CLYV46#5kqAAlntfiow+LbY1NXV}jrR)sjCXZ#u[sS(KS,FX,H@VswM^h!A)lbssJsYm-wN$ua=NA9HfbZ;vFcmRf2[@lv50M:-Xg--:RMGikHJ-19e7JlHDcA,!YdJx!VMNWP^*8G@ce^t0wa!ueqG=498qtP*wgFq5;=,LPj*YlwrAzPFWG^-W5+H96HI)l]f4:rHhc.YG?M-!L(2qL$+UaxaY]@d))$yh2I?YsT/z@#(t@ltu-3K;1oCP1w9^ijUbv(PQ_k1c}M]?Bb+4Pa46:9!;sBmPH%(2ux/TteLgrvOp}4+HeLr=u^DtsZHvA0ZdYWmVG.14no%kx^{HhJfg{MRi2)@K}Ml63STTE4$Dd+%SYH)q+g#xsRqEwuWa@-^BMk+Z27{/8!UiI3DyArp/gkqkKJ5zOk^9cDZ/de$M4JnBGTfUKNL44=#2Q!V)/;X);mz;Y?D?O,B!OUfPm8@gGgYwbABJW?lSzCU#W}h(-TAF-A5q=KbV%3Lm+96W7YrHC_=T6H?+=7-V]$GT](Eg,X4?JXF%5=K@C_kd{$:04qZBKQYy13beURLWJuMZHDCts{W!cj_yQoyya$[GOl;#7}sahvPT_E$hF]-KgrBT0vZ3WI76CoV+0{^trBKDb*:OzK6Sz/gQlC%G=[GOd1)%.Q.=!5uxYyaXu1n(x@rlhW/s.cr1[n?n5NWsHE+1d?Jy0$u8T.+v@gYUltH2-BrPV%ha4oeJz%(%@T2GY32Y:KACj@VNtuV#N_4%2q{N{CG{CWIHc}4eQfnbnYaUWNLF%xO[,N4mJ,#=HDzS.$]H0#JiQ4msItkGhlj!Ex5Y5y]WD_Ar5p?/4bwVOhJ/xOjYlaSkZ*Gb1;e6lK(+%]rFO#-:6RvRl-I$:/9_PlszZGZpkBqn#L!Sf#B5iBd(ShX*+a=0qsr{+{74SY5aGeOa5iPMFxeJaD46{tsV/(rHxSlyMeB?F]oqu@NEpsLHz7Jjt:zaG;cG@c+Gp[SO$o!6Z1pQ8$:j]_#yHcsWaED!}!T,UFmDx(lQ/Yl#=@LR(f;(59G{9H6:{YgKdfRL),uNjIYqVf1?xk07,V6zgi-mMqWLZwiBJQf^ZvR2ZvAVjN/Il[IZ!(*:UItfF%V5m(/wAH;$3gfcUT_n*YAL+u(X[th=wj?x</UDF6>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>8</ID>
      <Description>"Misc"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0F09FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Devmode"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:None
1:Cords
2:User Data
4:Details
6:More data
8:Skyblock Portals
9:Skyblock portals and Cords
10:Skyblock portals and details
12:Skyblox portals and etc
</DropDownList>
          <LastState Value="0" RealAddress="059EB504"/>
          <Color>D73760</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EB504</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Show FPS"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:None
1:Show FPS
2:Comact
</DropDownList>
          <LastState Value="0" RealAddress="006BC514"/>
          <Color>000080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+2BC514</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>117</ID>
          <Description>"Camera Value"</Description>
          <LastState Value="0" RealAddress="059F0D10"/>
          <Color>F0BE39</Color>
          <VariableType>Float</VariableType>
          <Address>srb2win.exe+55F0D10</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"Pause Effect"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:No Pause
1:Pause
</DropDownList>
          <LastState Value="1" RealAddress="0082E118"/>
          <Color>C08000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+42E118</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"No Ring"</Description>
          <LastState/>
          <Color>4080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : Jonathan Pabon

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,8B 4B 38 66 8B B3 2A 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,(float)0
  mov si,[ebx+0000012A]
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 4B 38 66 8B B3 2A 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+11E322

"srb2win.exe"+11E304: 83 EC 1C                 -  sub esp,1C
"srb2win.exe"+11E307: 8B 5C 24 30              -  mov ebx,[esp+30]
"srb2win.exe"+11E30B: 8B 54 24 34              -  mov edx,[esp+34]
"srb2win.exe"+11E30F: 85 DB                    -  test ebx,ebx
"srb2win.exe"+11E311: 74 58                    -  je srb2win.exe+11E36B
"srb2win.exe"+11E313: 80 BB FC 01 00 00 00     -  cmp byte ptr [ebx+000001FC],00
"srb2win.exe"+11E31A: 75 57                    -  jne srb2win.exe+11E373
"srb2win.exe"+11E31C: 8B 3B                    -  mov edi,[ebx]
"srb2win.exe"+11E31E: 85 FF                    -  test edi,edi
"srb2win.exe"+11E320: 74 49                    -  je srb2win.exe+11E36B
// ---------- INJECTING HERE ----------
"srb2win.exe"+11E322: 8B 4B 38                 -  mov ecx,[ebx+38]
"srb2win.exe"+11E325: 66 8B B3 2A 01 00 00     -  mov si,[ebx+0000012A]
// ---------- DONE INJECTING  ----------
"srb2win.exe"+11E32C: 89 D0                    -  mov eax,edx
"srb2win.exe"+11E32E: 01 D6                    -  add esi,edx
"srb2win.exe"+11E330: 01 C8                    -  add eax,ecx
"srb2win.exe"+11E332: 66 89 B3 2A 01 00 00     -  mov [ebx+0000012A],si
"srb2win.exe"+11E339: 66 3D 0F 27              -  cmp ax,270F
"srb2win.exe"+11E33D: 66 89 43 38              -  mov [ebx+38],ax
"srb2win.exe"+11E341: 7E 48                    -  jle srb2win.exe+11E38B
"srb2win.exe"+11E343: 66 C7 43 38 0F 27        -  mov word ptr [ebx+38],270F
"srb2win.exe"+11E349: A0 80 13 80 00           -  mov al,[srb2win.exe+401380]
"srb2win.exe"+11E34E: 0A 05 2C 13 80 00        -  or al,[srb2win.exe+40132C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>42</ID>
          <Description>"Tails Fly"</Description>
          <LastState/>
          <Color>C08000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Jonathan Pabon

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A3 C0 64 8B 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [srb2win.exe+44B64C0],(float)1
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A3 C0 64 8B 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+17C5CD

"srb2win.exe"+17C5A7: 89 44 24 04                    -  mov [esp+04],eax
"srb2win.exe"+17C5AB: 8B 44 24 70                    -  mov eax,[esp+70]
"srb2win.exe"+17C5AF: 89 04 24                       -  mov [esp],eax
"srb2win.exe"+17C5B2: 81 E5 FF FF 00 00              -  and ebp,0000FFFF
"srb2win.exe"+17C5B8: E8 63 E7 F4 FF                 -  call srb2win.exe+CAD20
"srb2win.exe"+17C5BD: 8B 4C 24 54                    -  mov ecx,[esp+54]
"srb2win.exe"+17C5C1: 09 CD                          -  or ebp,ecx
"srb2win.exe"+17C5C3: 09 C5                          -  or ebp,eax
"srb2win.exe"+17C5C5: 0F 84 26 01 00 00              -  je srb2win.exe+17C6F1
"srb2win.exe"+17C5CB: 31 C0                          -  xor eax,eax
// ---------- INJECTING HERE ----------
"srb2win.exe"+17C5CD: A3 C0 64 8B 04                 -  mov [srb2win.exe+44B64C0],eax
// ---------- DONE INJECTING  ----------
"srb2win.exe"+17C5D2: 8B 44 24 44                    -  mov eax,[esp+44]
"srb2win.exe"+17C5D6: 66 83 78 5C 02                 -  cmp word ptr [eax+5C],02
"srb2win.exe"+17C5DB: 0F 84 B7 06 00 00              -  je srb2win.exe+17CC98
"srb2win.exe"+17C5E1: A0 C8 64 8B 04                 -  mov al,[srb2win.exe+44B64C8]
"srb2win.exe"+17C5E6: 3C 01                          -  cmp al,01
"srb2win.exe"+17C5E8: 0F 84 3B 06 00 00              -  je srb2win.exe+17CC29
"srb2win.exe"+17C5EE: 3C 02                          -  cmp al,02
"srb2win.exe"+17C5F0: 0F 84 B5 06 00 00              -  je srb2win.exe+17CCAB
"srb2win.exe"+17C5F6: 31 ED                          -  xor ebp,ebp
"srb2win.exe"+17C5F8: 84 C0                          -  test al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>43</ID>
          <Description>"No-Tails Fly"</Description>
          <LastState/>
          <Color>408080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Jonathan Pabon

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A3 C0 64 8B 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A3 C0 64 8B 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+17C5CD

"srb2win.exe"+17C5A7: 89 44 24 04                    -  mov [esp+04],eax
"srb2win.exe"+17C5AB: 8B 44 24 70                    -  mov eax,[esp+70]
"srb2win.exe"+17C5AF: 89 04 24                       -  mov [esp],eax
"srb2win.exe"+17C5B2: 81 E5 FF FF 00 00              -  and ebp,0000FFFF
"srb2win.exe"+17C5B8: E8 63 E7 F4 FF                 -  call srb2win.exe+CAD20
"srb2win.exe"+17C5BD: 8B 4C 24 54                    -  mov ecx,[esp+54]
"srb2win.exe"+17C5C1: 09 CD                          -  or ebp,ecx
"srb2win.exe"+17C5C3: 09 C5                          -  or ebp,eax
"srb2win.exe"+17C5C5: 0F 84 26 01 00 00              -  je srb2win.exe+17C6F1
"srb2win.exe"+17C5CB: 31 C0                          -  xor eax,eax
// ---------- INJECTING HERE ----------
"srb2win.exe"+17C5CD: A3 C0 64 8B 04                 -  mov [srb2win.exe+44B64C0],eax
// ---------- DONE INJECTING  ----------
"srb2win.exe"+17C5D2: 8B 44 24 44                    -  mov eax,[esp+44]
"srb2win.exe"+17C5D6: 66 83 78 5C 02                 -  cmp word ptr [eax+5C],02
"srb2win.exe"+17C5DB: 0F 84 B7 06 00 00              -  je srb2win.exe+17CC98
"srb2win.exe"+17C5E1: A0 C8 64 8B 04                 -  mov al,[srb2win.exe+44B64C8]
"srb2win.exe"+17C5E6: 3C 01                          -  cmp al,01
"srb2win.exe"+17C5E8: 0F 84 3B 06 00 00              -  je srb2win.exe+17CC29
"srb2win.exe"+17C5EE: 3C 02                          -  cmp al,02
"srb2win.exe"+17C5F0: 0F 84 B5 06 00 00              -  je srb2win.exe+17CCAB
"srb2win.exe"+17C5F6: 31 ED                          -  xor ebp,ebp
"srb2win.exe"+17C5F8: 84 C0                          -  test al,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Never-Get-Rings"</Description>
          <LastState/>
          <Color>400080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-13
  Author : Jonathan Pabon

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 83 78 38 00 0F 8E D2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax+38],0
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 83 78 38 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+68D1A

"srb2win.exe"+68CEC: A1 70 A0 63 00           -  mov eax,[srb2win.exe+23A070]
"srb2win.exe"+68CF1: 89 04 24                 -  mov [esp],eax
"srb2win.exe"+68CF4: E8 C7 04 FD FF           -  call srb2win.exe+391C0
"srb2win.exe"+68CF9: 85 C0                    -  test eax,eax
"srb2win.exe"+68CFB: 0F 85 41 F1 FF FF        -  jne srb2win.exe+67E42
"srb2win.exe"+68D01: A1 08 A7 A0 05           -  mov eax,[srb2win.exe+560A708]
"srb2win.exe"+68D06: 8B 0D 74 A0 63 00        -  mov ecx,[srb2win.exe+23A074]
"srb2win.exe"+68D0C: 8B 90 F4 01 00 00        -  mov edx,[eax+000001F4]
"srb2win.exe"+68D12: 85 D2                    -  test edx,edx
"srb2win.exe"+68D14: 0F 85 E2 0B 00 00        -  jne srb2win.exe+698FC
// ---------- INJECTING HERE ----------
"srb2win.exe"+68D1A: 66 83 78 38 00           -  cmp word ptr [eax+38],00
// ---------- DONE INJECTING  ----------
"srb2win.exe"+68D1F: 0F 8E D2 0E 00 00        -  jng srb2win.exe+69BF7
"srb2win.exe"+68D25: 8B 15 04 DB 80 00        -  mov edx,[srb2win.exe+40DB04]
"srb2win.exe"+68D2B: B8 00 00 0E 00           -  mov eax,000E0000
"srb2win.exe"+68D30: E9 D2 0B 00 00           -  jmp srb2win.exe+69907
"srb2win.exe"+68D35: E8 76 B6 FF FF           -  call srb2win.exe+643B0
"srb2win.exe"+68D3A: E9 EF F0 FF FF           -  jmp srb2win.exe+67E2E
"srb2win.exe"+68D3F: C7 04 24 05 00 00 00     -  mov [esp],00000005
"srb2win.exe"+68D46: E8 A5 CD 18 00           -  call srb2win.exe+1F5AF0
"srb2win.exe"+68D4B: 85 C0                    -  test eax,eax
"srb2win.exe"+68D4D: 0F 84 FC F0 FF FF        -  je srb2win.exe+67E4F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103</ID>
          <Description>"Animation Number"</Description>
          <LastState Value="1" RealAddress="059EC934"/>
          <Color>55D3F9</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC934</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>107</ID>
          <Description>"Spectating"</Description>
          <LastState Value="0" RealAddress="059F0DA8"/>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>059F0DA8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>98</ID>
          <Description>"FOV"</Description>
          <LastState Value="90" RealAddress="006BB836"/>
          <Color>FF8000</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>srb2win.exe+2BB836</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>111</ID>
          <Description>"NetGame"</Description>
          <LastState Value="0" RealAddress="059F0D08"/>
          <Color>0000FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55F0D08</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>113</ID>
          <Description>"Camera Speed"</Description>
          <LastState Value="0" RealAddress="006A9656"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>F10EE0</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+2A9656</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>121</ID>
          <Description>"No Thok"</Description>
          <LastState/>
          <Color>80FF80</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-11
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,89 83 90 00 00 00 E9 43) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+00000090],(float)0
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 83 90 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+125399

srb2win.exe+125378: 8B 0B                 - mov ecx,[ebx]
srb2win.exe+12537A: 0F BE C0              - movsx eax,al
srb2win.exe+12537D: 8B 51 68              - mov edx,[ecx+68]
srb2win.exe+125380: 0F AF C2              - imul eax,edx
srb2win.exe+125383: 85 C0                 - test eax,eax
srb2win.exe+125385: 0F 8E 5C FF FF FF     - jng srb2win.exe+1252E7
srb2win.exe+12538B: D1 FA                 - sar edx,1
srb2win.exe+12538D: 8B 83 90 00 00 00     - mov eax,[ebx+00000090]
srb2win.exe+125393: 80 E4 BF              - and ah,-41
srb2win.exe+125396: 89 51 68              - mov [ecx+68],edx
// ---------- INJECTING HERE ----------
srb2win.exe+125399: 89 83 90 00 00 00     - mov [ebx+00000090],eax
// ---------- DONE INJECTING  ----------
srb2win.exe+12539F: E9 43 FF FF FF        - jmp srb2win.exe+1252E7
srb2win.exe+1253A4: 8B 8B 90 00 00 00     - mov ecx,[ebx+00000090]
srb2win.exe+1253AA: 89 C8                 - mov eax,ecx
srb2win.exe+1253AC: A9 00 00 10 00        - test eax,00100000
srb2win.exe+1253B1: 0F 84 DD FE FF FF     - je srb2win.exe+125294
srb2win.exe+1253B7: 80 BB 0C 01 00 00 00  - cmp byte ptr [ebx+0000010C],00
srb2win.exe+1253BE: 74 6D                 - je srb2win.exe+12542D
srb2win.exe+1253C0: 8B 13                 - mov edx,[ebx]
srb2win.exe+1253C2: 8B 8A C8 00 00 00     - mov ecx,[edx+000000C8]
srb2win.exe+1253C8: 85 C9                 - test ecx,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>122</ID>
          <Description>"Jump To Win"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-11
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,89 83 90 00 00 00 E9 43) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+00000090],(float)8
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 83 90 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+125399

srb2win.exe+125378: 8B 0B                 - mov ecx,[ebx]
srb2win.exe+12537A: 0F BE C0              - movsx eax,al
srb2win.exe+12537D: 8B 51 68              - mov edx,[ecx+68]
srb2win.exe+125380: 0F AF C2              - imul eax,edx
srb2win.exe+125383: 85 C0                 - test eax,eax
srb2win.exe+125385: 0F 8E 5C FF FF FF     - jng srb2win.exe+1252E7
srb2win.exe+12538B: D1 FA                 - sar edx,1
srb2win.exe+12538D: 8B 83 90 00 00 00     - mov eax,[ebx+00000090]
srb2win.exe+125393: 80 E4 BF              - and ah,-41
srb2win.exe+125396: 89 51 68              - mov [ecx+68],edx
// ---------- INJECTING HERE ----------
srb2win.exe+125399: 89 83 90 00 00 00     - mov [ebx+00000090],eax
// ---------- DONE INJECTING  ----------
srb2win.exe+12539F: E9 43 FF FF FF        - jmp srb2win.exe+1252E7
srb2win.exe+1253A4: 8B 8B 90 00 00 00     - mov ecx,[ebx+00000090]
srb2win.exe+1253AA: 89 C8                 - mov eax,ecx
srb2win.exe+1253AC: A9 00 00 10 00        - test eax,00100000
srb2win.exe+1253B1: 0F 84 DD FE FF FF     - je srb2win.exe+125294
srb2win.exe+1253B7: 80 BB 0C 01 00 00 00  - cmp byte ptr [ebx+0000010C],00
srb2win.exe+1253BE: 74 6D                 - je srb2win.exe+12542D
srb2win.exe+1253C0: 8B 13                 - mov edx,[ebx]
srb2win.exe+1253C2: 8B 8A C8 00 00 00     - mov ecx,[edx+000000C8]
srb2win.exe+1253C8: 85 C9                 - test ecx,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>123</ID>
          <Description>"Hock"</Description>
          <LastState Value="3" RealAddress="059EC931"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>808040</Color>
          <VariableType>Byte</VariableType>
          <Address>059EC931</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>95</ID>
          <Description>"Space AirTime"</Description>
          <LastState Value="0" RealAddress="059EC902"/>
          <Color>000080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>059EC902</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>106</ID>
          <Description>"NodeSpoof (Beta)"</Description>
          <LastState Value="0" RealAddress="059F0E8C"/>
          <Color>808000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>059F0E8C</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>79</ID>
          <Description>"Disable ExitLevel"</Description>
          <LastState/>
          <Color>808040</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-09
  Author : danie

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,C7 83 08 01 00 00 64 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+00000108],(byte)0
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C7 83 08 01 00 00 64 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+1213C0

"srb2win.exe"+121391: 83 EC 28                       -  sub esp,28
"srb2win.exe"+121394: 8B 5C 24 30                    -  mov ebx,[esp+30]
"srb2win.exe"+121398: 8B 83 08 01 00 00              -  mov eax,[ebx+00000108]
"srb2win.exe"+12139E: 85 C0                          -  test eax,eax
"srb2win.exe"+1213A0: 0F 85 BE 00 00 00              -  jne srb2win.exe+121464
"srb2win.exe"+1213A6: A1 F4 5E 63 00                 -  mov eax,[srb2win.exe+235EF4]
"srb2win.exe"+1213AB: 85 C0                          -  test eax,eax
"srb2win.exe"+1213AD: 0F 84 5C 01 00 00              -  je srb2win.exe+12150F
"srb2win.exe"+1213B3: F6 05 51 3D 7F 00 10           -  test byte ptr [srb2win.exe+3F3D51],10
"srb2win.exe"+1213BA: 0F 85 A9 00 00 00              -  jne srb2win.exe+121469
// ---------- INJECTING HERE ----------
"srb2win.exe"+1213C0: C7 83 08 01 00 00 64 00 00 00  -  mov [ebx+00000108],00000064
// ---------- DONE INJECTING  ----------
"srb2win.exe"+1213CA: 80 BB 00 01 00 00 00           -  cmp byte ptr [ebx+00000100],00
"srb2win.exe"+1213D1: 8B 93 90 00 00 00              -  mov edx,[ebx+00000090]
"srb2win.exe"+1213D7: 0F 84 02 01 00 00              -  je srb2win.exe+1214DF
"srb2win.exe"+1213DD: 8B 83 C0 00 00 00              -  mov eax,[ebx+000000C0]
"srb2win.exe"+1213E3: C6 83 00 01 00 00 00           -  mov byte ptr [ebx+00000100],00
"srb2win.exe"+1213EA: 25 00 01 00 00                 -  and eax,00000100
"srb2win.exe"+1213EF: 83 F8 01                       -  cmp eax,01
"srb2win.exe"+1213F2: 19 C0                          -  sbb eax,eax
"srb2win.exe"+1213F4: 25 00 00 FF FF                 -  and eax,FFFF0000
"srb2win.exe"+1213F9: 05 00 80 01 00                 -  add eax,00018000
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>90</ID>
          <Description>"Pause (Boolean)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:False
1:True
</DropDownList>
          <LastState Value="0" RealAddress="059F0A24"/>
          <Color>FF8000</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55F0A24</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>55</ID>
      <Description>"Debug"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>408000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>58</ID>
          <Description>"Clear Water"</Description>
          <LastState/>
          <Color>1BE4BC</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,8B 9D D0 00 00 00 C7) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ebx,(float)0
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 9D D0 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+159F18

srb2win.exe+159EE7: 89 42 14                 - mov [edx+14],eax
srb2win.exe+159EEA: 8B 15 04 20 84 00        - mov edx,[srb2win.exe+442004]
srb2win.exe+159EF0: 42                       - inc edx
srb2win.exe+159EF1: 89 47 18                 - mov [edi+18],eax
srb2win.exe+159EF4: C7 00 00 00 00 00        - mov [eax],00000000
srb2win.exe+159EFA: C7 40 08 00 00 00 00     - mov [eax+08],00000000
srb2win.exe+159F01: C7 40 0C 00 00 00 00     - mov [eax+0C],00000000
srb2win.exe+159F08: C7 40 10 00 00 00 00     - mov [eax+10],00000000
srb2win.exe+159F0F: 89 15 04 20 84 00        - mov [srb2win.exe+442004],edx
srb2win.exe+159F15: 89 68 04                 - mov [eax+04],ebp
// ---------- INJECTING HERE ----------
srb2win.exe+159F18: 8B 9D D0 00 00 00        - mov ebx,[ebp+000000D0]
// ---------- DONE INJECTING  ----------
srb2win.exe+159F1E: C7 44 24 18 00 00 00 00  - mov [esp+18],00000000
srb2win.exe+159F26: 85 DB                    - test ebx,ebx
srb2win.exe+159F28: 0F 8E 0D 01 00 00        - jng srb2win.exe+15A03B
srb2win.exe+159F2E: 83 C9 FF                 - or ecx,-01
srb2win.exe+159F31: C7 44 24 1C 00 00 00 00  - mov [esp+1C],00000000
srb2win.exe+159F39: 31 F6                    - xor esi,esi
srb2win.exe+159F3B: EB 13                    - jmp srb2win.exe+159F50
srb2win.exe+159F3D: C7 44 B5 30 00 00 00 00  - mov [ebp+esi*4+30],00000000
srb2win.exe+159F45: 46                       - inc esi
srb2win.exe+159F46: 8B 9D D0 00 00 00        - mov ebx,[ebp+000000D0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"Crash On Ring"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 89 43 38 83 C4 4C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 43 38 83 C4 4C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+BB841

srb2win.exe+BB81C: E8 4F 24 0B 00     - call srb2win.exe+16DC70
srb2win.exe+BB821: 89 7C 24 04        - mov [esp+04],edi
srb2win.exe+BB825: 89 1C 24           - mov [esp],ebx
srb2win.exe+BB828: E8 83 F3 FF FF     - call srb2win.exe+BABB0
srb2win.exe+BB82D: 8B 44 24 68        - mov eax,[esp+68]
srb2win.exe+BB831: 85 C0              - test eax,eax
srb2win.exe+BB833: 75 18              - jne srb2win.exe+BB84D
srb2win.exe+BB835: 8B 43 38           - mov eax,[ebx+38]
srb2win.exe+BB838: 66 29 F8           - sub ax,di
srb2win.exe+BB83B: 0F 88 84 00 00 00  - js srb2win.exe+BB8C5
// ---------- INJECTING HERE ----------
srb2win.exe+BB841: 66 89 43 38        - mov [ebx+38],ax
// ---------- DONE INJECTING  ----------
srb2win.exe+BB845: 83 C4 4C           - add esp,4C
srb2win.exe+BB848: 5B                 - pop ebx
srb2win.exe+BB849: 5E                 - pop esi
srb2win.exe+BB84A: 5F                 - pop edi
srb2win.exe+BB84B: 5D                 - pop ebp
srb2win.exe+BB84C: C3                 - ret 
srb2win.exe+BB84D: 66 8B 43 3A        - mov ax,[ebx+3A]
srb2win.exe+BB851: 66 29 F8           - sub ax,di
srb2win.exe+BB854: 78 61              - js srb2win.exe+BB8B7
srb2win.exe+BB856: 66 89 43 3A        - mov [ebx+3A],ax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>116</ID>
          <Description>"Pause Camera"</Description>
          <LastState/>
          <Color>8080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-11
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,89 30 0F 84 35 07 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [eax],(float)0
  je srb2win.exe+434C2
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 30 0F 84 35 07 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+42D85

srb2win.exe+42D5E: 0F 84 0A 07 00 00     - je srb2win.exe+4346E
srb2win.exe+42D64: 8B 44 24 34           - mov eax,[esp+34]
srb2win.exe+42D68: 80 F9 02              - cmp cl,02
INJECT: 8B 00                 - mov eax,[eax]
srb2win.exe+42D6D: 0F 84 F0 0A 00 00     - je srb2win.exe+43863
srb2win.exe+42D73: 66 8B 75 02           - mov si,[ebp+02]
srb2win.exe+42D77: C1 E6 10              - shl esi,10
srb2win.exe+42D7A: 01 C6                 - add esi,eax
srb2win.exe+42D7C: 8B 44 24 34           - mov eax,[esp+34]
srb2win.exe+42D80: 83 7C 24 20 01        - cmp dword ptr [esp+20],01
// ---------- INJECTING HERE ----------
srb2win.exe+42D85: 89 30                 - mov [eax],esi
// ---------- DONE INJECTING  ----------
srb2win.exe+42D87: 0F 84 35 07 00 00     - je srb2win.exe+434C2
srb2win.exe+42D8D: 83 7C 24 20 03        - cmp dword ptr [esp+20],03
srb2win.exe+42D92: 0F 85 25 02 00 00     - jne srb2win.exe+42FBD
srb2win.exe+42D98: F6 44 24 6C 01        - test byte ptr [esp+6C],01
srb2win.exe+42D9D: 0F 85 1A 02 00 00     - jne srb2win.exe+42FBD
srb2win.exe+42DA3: 8B 44 24 30           - mov eax,[esp+30]
srb2win.exe+42DA7: 8B 00                 - mov eax,[eax]
srb2win.exe+42DA9: 85 C0                 - test eax,eax
srb2win.exe+42DAB: 0F 84 0C 02 00 00     - je srb2win.exe+42FBD
srb2win.exe+42DB1: 8B 04 BD B0 13 80 00  - mov eax,[edi*4+srb2win.exe+4013B0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>54</ID>
          <Description>"Corupter"</Description>
          <LastState/>
          <Color>C0C0C0</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : danie

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,msvcrt.dll,66 0F 7F 67 40) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movdqa [edi+80],xmm4
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 0F 7F 67 40

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "msvcrt.dll"+8B14E

"msvcrt.dll"+8B11D: 66 0F 6F 56 20     -  movdqa xmm2,[esi+20]
"msvcrt.dll"+8B122: 66 0F 6F 5E 30     -  movdqa xmm3,[esi+30]
"msvcrt.dll"+8B127: 66 0F 7F 07        -  movdqa [edi],xmm0
"msvcrt.dll"+8B12B: 66 0F 7F 4F 10     -  movdqa [edi+10],xmm1
"msvcrt.dll"+8B130: 66 0F 7F 57 20     -  movdqa [edi+20],xmm2
"msvcrt.dll"+8B135: 66 0F 7F 5F 30     -  movdqa [edi+30],xmm3
"msvcrt.dll"+8B13A: 66 0F 6F 66 40     -  movdqa xmm4,[esi+40]
"msvcrt.dll"+8B13F: 66 0F 6F 6E 50     -  movdqa xmm5,[esi+50]
"msvcrt.dll"+8B144: 66 0F 6F 76 60     -  movdqa xmm6,[esi+60]
"msvcrt.dll"+8B149: 66 0F 6F 7E 70     -  movdqa xmm7,[esi+70]
// ---------- INJECTING HERE ----------
"msvcrt.dll"+8B14E: 66 0F 7F 67 40     -  movdqa [edi+40],xmm4
// ---------- DONE INJECTING  ----------
"msvcrt.dll"+8B153: 66 0F 7F 6F 50     -  movdqa [edi+50],xmm5
"msvcrt.dll"+8B158: 66 0F 7F 77 60     -  movdqa [edi+60],xmm6
"msvcrt.dll"+8B15D: 66 0F 7F 7F 70     -  movdqa [edi+70],xmm7
"msvcrt.dll"+8B162: 8D B6 80 00 00 00  -  lea esi,[esi+00000080]
"msvcrt.dll"+8B168: 8D BF 80 00 00 00  -  lea edi,[edi+00000080]
"msvcrt.dll"+8B16E: 49                 -  dec ecx
"msvcrt.dll"+8B16F: 75 A3              -  jne msvcrt.dll+8B114
"msvcrt.dll"+8B171: 8B 75 F8           -  mov esi,[ebp-08]
"msvcrt.dll"+8B174: 8B 7D FC           -  mov edi,[ebp-04]
"msvcrt.dll"+8B177: 8B E5              -  mov esp,ebp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"Always Show Cursor"</Description>
          <LastState/>
          <Color>800040</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A1 18 E1 82 00 85 C0 0F 85 32) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(float)1
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A1 18 E1 82 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+18674C

"srb2win.exe"+18671E: 66 81 FF 01 C0        -  cmp di,C001
"srb2win.exe"+186723: 0F 8C 32 04 00 00     -  jl srb2win.exe+186B5B
"srb2win.exe"+186729: 3D FF 01 00 00        -  cmp eax,000001FF
"srb2win.exe"+18672E: 0F 9F C0              -  setg al
"srb2win.exe"+186731: 25 FF 00 00 00        -  and eax,000000FF
"srb2win.exe"+186736: 89 44 24 34           -  mov [esp+34],eax
"srb2win.exe"+18673A: E9 A4 F8 FF FF        -  jmp srb2win.exe+185FE3
"srb2win.exe"+18673F: A1 F4 24 6F 00        -  mov eax,[srb2win.exe+2F24F4]
"srb2win.exe"+186744: 85 C0                 -  test eax,eax
"srb2win.exe"+186746: 0F 85 55 FB FF FF     -  jne srb2win.exe+1862A1
// ---------- INJECTING HERE ----------
"srb2win.exe"+18674C: A1 18 E1 82 00        -  mov eax,[srb2win.exe+42E118]
// ---------- DONE INJECTING  ----------
"srb2win.exe"+186751: 85 C0                 -  test eax,eax
"srb2win.exe"+186753: 0F 85 32 FB FF FF     -  jne srb2win.exe+18628B
"srb2win.exe"+186759: 80 3D 24 0A 9F 05 00  -  cmp byte ptr [srb2win.exe+55F0A24],00
"srb2win.exe"+186760: 0F 85 2E FB FF FF     -  jne srb2win.exe+186294
"srb2win.exe"+186766: A1 04 1E 9F 05        -  mov eax,[srb2win.exe+55F1E04]
"srb2win.exe"+18676B: 0B 05 40 1E 9F 05     -  or eax,[srb2win.exe+55F1E40]
"srb2win.exe"+186771: 0F 85 1D FB FF FF     -  jne srb2win.exe+186294
"srb2win.exe"+186777: A1 84 13 80 00        -  mov eax,[srb2win.exe+401384]
"srb2win.exe"+18677C: 8D 50 FF              -  lea edx,[eax-01]
"srb2win.exe"+18677F: 83 FA 02              -  cmp edx,02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"Move Menu With Cursor"</Description>
          <LastState/>
          <Color>408080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A1 18 E1 82 00 85 C0 0F 85 32) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(float)0
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A1 18 E1 82 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+18674C

"srb2win.exe"+18671E: 66 81 FF 01 C0        -  cmp di,C001
"srb2win.exe"+186723: 0F 8C 32 04 00 00     -  jl srb2win.exe+186B5B
"srb2win.exe"+186729: 3D FF 01 00 00        -  cmp eax,000001FF
"srb2win.exe"+18672E: 0F 9F C0              -  setg al
"srb2win.exe"+186731: 25 FF 00 00 00        -  and eax,000000FF
"srb2win.exe"+186736: 89 44 24 34           -  mov [esp+34],eax
"srb2win.exe"+18673A: E9 A4 F8 FF FF        -  jmp srb2win.exe+185FE3
"srb2win.exe"+18673F: A1 F4 24 6F 00        -  mov eax,[srb2win.exe+2F24F4]
"srb2win.exe"+186744: 85 C0                 -  test eax,eax
"srb2win.exe"+186746: 0F 85 55 FB FF FF     -  jne srb2win.exe+1862A1
// ---------- INJECTING HERE ----------
"srb2win.exe"+18674C: A1 18 E1 82 00        -  mov eax,[srb2win.exe+42E118]
// ---------- DONE INJECTING  ----------
"srb2win.exe"+186751: 85 C0                 -  test eax,eax
"srb2win.exe"+186753: 0F 85 32 FB FF FF     -  jne srb2win.exe+18628B
"srb2win.exe"+186759: 80 3D 24 0A 9F 05 00  -  cmp byte ptr [srb2win.exe+55F0A24],00
"srb2win.exe"+186760: 0F 85 2E FB FF FF     -  jne srb2win.exe+186294
"srb2win.exe"+186766: A1 04 1E 9F 05        -  mov eax,[srb2win.exe+55F1E04]
"srb2win.exe"+18676B: 0B 05 40 1E 9F 05     -  or eax,[srb2win.exe+55F1E40]
"srb2win.exe"+186771: 0F 85 1D FB FF FF     -  jne srb2win.exe+186294
"srb2win.exe"+186777: A1 84 13 80 00        -  mov eax,[srb2win.exe+401384]
"srb2win.exe"+18677C: 8D 50 FF              -  lea edx,[eax-01]
"srb2win.exe"+18677F: 83 FA 02              -  cmp edx,02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"No Unpause"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Lapide
  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,8B 15 18 E1 82 00 85 D2 74 5A) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov edx,(float)0
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 15 18 E1 82 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+88874

"srb2win.exe"+8885D: 75 D3                          -  jne srb2win.exe+88832
"srb2win.exe"+8885F: 89 D0                          -  mov eax,edx
"srb2win.exe"+88861: C1 E8 06                       -  shr eax,06
"srb2win.exe"+88864: 83 E0 3F                       -  and eax,3F
"srb2win.exe"+88867: 75 C9                          -  jne srb2win.exe+88832
"srb2win.exe"+88869: 89 D0                          -  mov eax,edx
"srb2win.exe"+8886B: 31 C9                          -  xor ecx,ecx
"srb2win.exe"+8886D: 83 E0 3F                       -  and eax,3F
"srb2win.exe"+88870: 74 C2                          -  je srb2win.exe+88834
"srb2win.exe"+88872: EB BE                          -  jmp srb2win.exe+88832
// ---------- INJECTING HERE ----------
"srb2win.exe"+88874: 8B 15 18 E1 82 00              -  mov edx,[srb2win.exe+42E118]
// ---------- DONE INJECTING  ----------
"srb2win.exe"+8887A: 85 D2                          -  test edx,edx
"srb2win.exe"+8887C: 74 5A                          -  je srb2win.exe+888D8
"srb2win.exe"+8887E: 8B 40 20                       -  mov eax,[eax+20]
"srb2win.exe"+88881: 85 C0                          -  test eax,eax
"srb2win.exe"+88883: 74 06                          -  je srb2win.exe+8888B
"srb2win.exe"+88885: FF D0                          -  call eax
"srb2win.exe"+88887: 85 C0                          -  test eax,eax
"srb2win.exe"+88889: 74 4D                          -  je srb2win.exe+888D8
"srb2win.exe"+8888B: C7 44 24 04 00 A5 A0 05        -  mov [esp+04],srb2win.exe+560A500
"srb2win.exe"+88893: C7 04 24 1D A8 71 00           -  mov [esp],srb2win.exe+31A81D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"No Pause"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-12
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,C7 05 18 E1 82 00 01 00 00 00 E8) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [srb2win.exe+42E118],(float)0
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C7 05 18 E1 82 00 01 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+79D13

"srb2win.exe"+79CEF: E8 AC 56 10 00                 -  call srb2win.exe+17F3A0
"srb2win.exe"+79CF4: 39 C3                          -  cmp ebx,eax
"srb2win.exe"+79CF6: 77 A1                          -  ja srb2win.exe+79C99
"srb2win.exe"+79CF8: E9 60 FF FF FF                 -  jmp srb2win.exe+79C5D
"srb2win.exe"+79CFD: 89 44 24 04                    -  mov [esp+04],eax
"srb2win.exe"+79D01: C7 04 24 00 00 00 00           -  mov [esp],00000000
"srb2win.exe"+79D08: E8 63 3F 0F 00                 -  call srb2win.exe+16DC70
"srb2win.exe"+79D0D: EB 80                          -  jmp srb2win.exe+79C8F
"srb2win.exe"+79D0F: 90                             -  nop 
"srb2win.exe"+79D10: 83 EC 1C                       -  sub esp,1C
// ---------- INJECTING HERE ----------
"srb2win.exe"+79D13: C7 05 18 E1 82 00 01 00 00 00  -  mov [srb2win.exe+42E118],00000001
// ---------- DONE INJECTING  ----------
"srb2win.exe"+79D1D: E8 CE E4 F8 FF                 -  call srb2win.exe+81F0
"srb2win.exe"+79D22: 85 C0                          -  test eax,eax
"srb2win.exe"+79D24: 0F 84 BB 01 00 00              -  je srb2win.exe+79EE5
"srb2win.exe"+79D2A: 80 3D 2C 13 80 00 00           -  cmp byte ptr [srb2win.exe+40132C],00
"srb2win.exe"+79D31: 0F 85 B0 00 00 00              -  jne srb2win.exe+79DE7
"srb2win.exe"+79D37: A1 08 0D 9F 05                 -  mov eax,[srb2win.exe+55F0D08]
"srb2win.exe"+79D3C: 0B 05 E4 C3 9E 05              -  or eax,[srb2win.exe+55EC3E4]
"srb2win.exe"+79D42: 0F 85 DB 00 00 00              -  jne srb2win.exe+79E23
"srb2win.exe"+79D48: 83 3D 84 13 80 00 01           -  cmp dword ptr [srb2win.exe+401384],01
"srb2win.exe"+79D4F: 75 0D                          -  jne srb2win.exe+79D5E
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"Never Update Rings"</Description>
          <LastState/>
          <Color>FF00FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-13
  Author : Jonathan Pabon

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,8B 71 38 8B 99 F4 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov esi,(float)1
  mov ebx,[ecx+000001F4]
  jmp return

INJECT:
  jmp newmem
  nop 4
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 71 38 8B 99 F4 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+699C1

"srb2win.exe"+69992: 0D 00 00 00 80           -  or eax,80000000
"srb2win.exe"+69997: 89 44 24 08              -  mov [esp+08],eax
"srb2win.exe"+6999B: A1 7C A0 63 00           -  mov eax,[srb2win.exe+23A07C]
"srb2win.exe"+699A0: 89 44 24 04              -  mov [esp+04],eax
"srb2win.exe"+699A4: A1 78 A0 63 00           -  mov eax,[srb2win.exe+23A078]
"srb2win.exe"+699A9: 89 04 24                 -  mov [esp],eax
"srb2win.exe"+699AC: E8 1F 05 10 00           -  call srb2win.exe+169ED0
"srb2win.exe"+699B1: E9 8C E4 FF FF           -  jmp srb2win.exe+67E42
"srb2win.exe"+699B6: 8B 0D 08 A7 A0 05        -  mov ecx,[srb2win.exe+560A708]
"srb2win.exe"+699BC: A1 B4 61 63 00           -  mov eax,[srb2win.exe+2361B4]
// ---------- INJECTING HERE ----------
"srb2win.exe"+699C1: 8B 71 38                 -  mov esi,[ecx+38]
"srb2win.exe"+699C4: 8B 99 F4 01 00 00        -  mov ebx,[ecx+000001F4]
// ---------- DONE INJECTING  ----------
"srb2win.exe"+699CA: 66 85 F6                 -  test si,si
"srb2win.exe"+699CD: 78 9E                    -  js srb2win.exe+6996D
"srb2win.exe"+699CF: 85 DB                    -  test ebx,ebx
"srb2win.exe"+699D1: 0F 85 BC 0A 00 00        -  jne srb2win.exe+6A493
"srb2win.exe"+699D7: 83 79 0C 02              -  cmp dword ptr [ecx+0C],02
"srb2win.exe"+699DB: 75 02                    -  jne srb2win.exe+699DF
"srb2win.exe"+699DD: 31 F6                    -  xor esi,esi
"srb2win.exe"+699DF: 0F BF D6                 -  movsx edx,si
"srb2win.exe"+699E2: 83 F8 02                 -  cmp eax,02
"srb2win.exe"+699E5: 0F 84 92 14 00 00        -  je srb2win.exe+6AE7D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"Crash"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]


aobscanmodule(INJECT,srb2win.exe,C1 E9 02 F3 AB EB B5 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C1 E9 02 F3 AB

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+2D672

srb2win.exe+2D654: 83 C7 02              - add edi,02
srb2win.exe+2D657: 83 E3 01              - and ebx,01
srb2win.exe+2D65A: 74 DC                 - je srb2win.exe+2D638
srb2win.exe+2D65C: EB E4                 - jmp srb2win.exe+2D642
srb2win.exe+2D65E: F7 C6 01 00 00 00     - test esi,00000001
srb2win.exe+2D664: 75 32                 - jne srb2win.exe+2D698
srb2win.exe+2D666: F7 C7 02 00 00 00     - test edi,00000002
srb2win.exe+2D66C: 75 33                 - jne srb2win.exe+2D6A1
srb2win.exe+2D66E: 89 D9                 - mov ecx,ebx
srb2win.exe+2D670: 31 C0                 - xor eax,eax
// ---------- INJECTING HERE ----------
srb2win.exe+2D672: C1 E9 02              - shr ecx,02
// ---------- DONE INJECTING  ----------
srb2win.exe+2D675: F3 AB                 - repe stosd 
srb2win.exe+2D677: EB B5                 - jmp srb2win.exe+2D62E
srb2win.exe+2D679: 83 7C 24 44 63        - cmp dword ptr [esp+44],63
srb2win.exe+2D67E: 7E A7                 - jle srb2win.exe+2D627
srb2win.exe+2D680: 89 1C 24              - mov [esp],ebx
srb2win.exe+2D683: E8 58 72 06 00        - call srb2win.exe+948E0
srb2win.exe+2D688: C7 04 24 0C 2B 71 00  - mov [esp],srb2win.exe+312B0C
srb2win.exe+2D68F: 89 44 24 04           - mov [esp+04],eax
srb2win.exe+2D693: E8 98 26 15 00        - call srb2win.exe+17FD30
srb2win.exe+2D698: C6 06 00              - mov byte ptr [esi],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"On Leave - 1"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Pause
0:Un Pause
</DropDownList>
          <LastState Value="1" RealAddress="007C8070"/>
          <Color>408000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+3C8070</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"Disable Music"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A1 54 6A 8B 04 C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(float)0
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A1 54 6A 8B 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+182370

srb2win.exe+182351: 25 FF 00 00 00        - and eax,000000FF
srb2win.exe+182356: 83 C4 1C              - add esp,1C
srb2win.exe+182359: C3                    - ret 
srb2win.exe+18235A: 85 C0                 - test eax,eax
srb2win.exe+18235C: 0F 95 C0              - setne al
srb2win.exe+18235F: 25 FF 00 00 00        - and eax,000000FF
srb2win.exe+182364: C3                    - ret 
srb2win.exe+182365: E8 F6 57 07 00        - call srb2win.exe+1F7B60
srb2win.exe+18236A: EB DB                 - jmp srb2win.exe+182347
srb2win.exe+18236C: 8D 74 26 00           - lea esi,[esi+00]
// ---------- INJECTING HERE ----------
srb2win.exe+182370: A1 54 6A 8B 04        - mov eax,[srb2win.exe+44B6A54]
// ---------- DONE INJECTING  ----------
srb2win.exe+182375: C3                    - ret 
srb2win.exe+182376: 8D B4 26 00 00 00 00  - lea esi,[esi+00000000]
srb2win.exe+18237D: 8D 76 00              - lea esi,[esi+00]
srb2win.exe+182380: 53                    - push ebx
srb2win.exe+182381: 83 EC 28              - sub esp,28
srb2win.exe+182384: D9 44 24 30           - fld dword ptr [esp+30]
srb2win.exe+182388: D8 15 30 DE 7A 00     - fcom dword ptr [srb2win.exe+3ADE30]
srb2win.exe+18238E: DF E0                 - fnstsw ax
srb2win.exe+182390: F6 C4 45              - test ah,45
srb2win.exe+182393: 75 08                 - jne srb2win.exe+18239D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"Play Music Even If Off"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,A1 54 6A 8B 04 C3) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(float)1
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db A1 54 6A 8B 04

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+182370

srb2win.exe+182351: 25 FF 00 00 00        - and eax,000000FF
srb2win.exe+182356: 83 C4 1C              - add esp,1C
srb2win.exe+182359: C3                    - ret 
srb2win.exe+18235A: 85 C0                 - test eax,eax
srb2win.exe+18235C: 0F 95 C0              - setne al
srb2win.exe+18235F: 25 FF 00 00 00        - and eax,000000FF
srb2win.exe+182364: C3                    - ret 
srb2win.exe+182365: E8 F6 57 07 00        - call srb2win.exe+1F7B60
srb2win.exe+18236A: EB DB                 - jmp srb2win.exe+182347
srb2win.exe+18236C: 8D 74 26 00           - lea esi,[esi+00]
// ---------- INJECTING HERE ----------
srb2win.exe+182370: A1 54 6A 8B 04        - mov eax,[srb2win.exe+44B6A54]
// ---------- DONE INJECTING  ----------
srb2win.exe+182375: C3                    - ret 
srb2win.exe+182376: 8D B4 26 00 00 00 00  - lea esi,[esi+00000000]
srb2win.exe+18237D: 8D 76 00              - lea esi,[esi+00]
srb2win.exe+182380: 53                    - push ebx
srb2win.exe+182381: 83 EC 28              - sub esp,28
srb2win.exe+182384: D9 44 24 30           - fld dword ptr [esp+30]
srb2win.exe+182388: D8 15 30 DE 7A 00     - fcom dword ptr [srb2win.exe+3ADE30]
srb2win.exe+18238E: DF E0                 - fnstsw ax
srb2win.exe+182390: F6 C4 45              - test ah,45
srb2win.exe+182393: 75 08                 - jne srb2win.exe+18239D
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>67</ID>
          <Description>"Fake Level"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Greenflower 1
2:Greenflower 2
3:Greenflower 3
4:Techno Hill 1
5:Techno Hill 2
6:Techno Hill 3
7:Deep Sea 1
8:Deep Sea 2
9:Deep Sea 3
10:Castle Eggman 1
11:Castle Eggman 2
12:Castle Eggman 3
13:Arid Canyon 1
14:Arid Canyon 2
15:Arid Canyon 3
99:Nothing
</DropDownList>
          <LastState Value="99" RealAddress="00639A06"/>
          <Color>0080FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>srb2win.exe+239A06</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>68</ID>
          <Description>"Sky"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Normal Sky
0:Glitched Sky
</DropDownList>
          <LastState Value="0" RealAddress="0623E4F4"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>FF80FF</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>srb2win.exe+5E3E4F4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"On Leave - 2"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Out Screen - Once activated from the cheat menu, and when you go back to the game then back to the menu, the music will still play.
0:In Screen - Once activated, go back to the game then back to the cheat menu, the music will stop playing.
</DropDownList>
          <LastState Value="1" RealAddress="048B6A54"/>
          <Color>408000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+44B6A54</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"UnPlayable"</Description>
          <LastState/>
          <Color>000080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-10
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,C6 05 70 80 7C 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C6 05 70 80 7C 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+186527

srb2win.exe+1864F6: 0F 84 14 02 00 00     - je srb2win.exe+186710
srb2win.exe+1864FC: 89 44 24 34           - mov [esp+34],eax
srb2win.exe+186500: E9 DE FA FF FF        - jmp srb2win.exe+185FE3
srb2win.exe+186505: 8B 15 CC 24 6F 00     - mov edx,[srb2win.exe+2F24CC]
srb2win.exe+18650B: A1 C8 24 6F 00        - mov eax,[srb2win.exe+2F24C8]
srb2win.exe+186510: 85 D2                 - test edx,edx
srb2win.exe+186512: 0F 84 0E F6 FF FF     - je srb2win.exe+185B26
srb2win.exe+186518: 85 C0                 - test eax,eax
srb2win.exe+18651A: 0F 84 7F F5 FF FF     - je srb2win.exe+185A9F
srb2win.exe+186520: 80 3D 24 0A 9F 05 00  - cmp byte ptr [srb2win.exe+55F0A24],00
// ---------- INJECTING HERE ----------
srb2win.exe+186527: C6 05 70 80 7C 00 00  - mov byte ptr [srb2win.exe+3C8070],00
// ---------- DONE INJECTING  ----------
srb2win.exe+18652E: 0F 84 CC 02 00 00     - je srb2win.exe+186800
srb2win.exe+186534: A1 D4 6E 8B 04        - mov eax,[srb2win.exe+44B6ED4]
srb2win.exe+186539: 85 C0                 - test eax,eax
srb2win.exe+18653B: 0F 85 5E F5 FF FF     - jne srb2win.exe+185A9F
srb2win.exe+186541: A1 B4 6A 63 00        - mov eax,[srb2win.exe+236AB4]
srb2win.exe+186546: 85 C0                 - test eax,eax
srb2win.exe+186548: 0F 84 51 F5 FF FF     - je srb2win.exe+185A9F
srb2win.exe+18654E: A1 F4 24 6F 00        - mov eax,[srb2win.exe+2F24F4]
srb2win.exe+186553: 85 C0                 - test eax,eax
srb2win.exe+186555: 75 42                 - jne srb2win.exe+186599
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>109</ID>
          <Description>"Update"</Description>
          <LastState Value="0" RealAddress="048B29E0"/>
          <Color>800080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+44B29E0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>101</ID>
          <Description>"Music"</Description>
          <LastState RealAddress="048B1AFC"/>
          <Color>004080</Color>
          <VariableType>String</VariableType>
          <Length>10</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>srb2win.exe+44B1AFC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>99</ID>
          <Description>"Camera Direction"</Description>
          <LastState Value="0" RealAddress="059F0D13"/>
          <Color>FF8080</Color>
          <VariableType>2 Bytes</VariableType>
          <Address>srb2win.exe+55F0D13</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>81</ID>
          <Description>"Corupter 2.0"</Description>
          <LastState/>
          <Color>400080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : danie

  This script does blah blah blah
}

define(address,"msvcrt.dll"+8B158)
define(bytes,66 0F 7F 77 60)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movdqa [edi+240],xmm6
  jmp return

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // movdqa [edi+60],xmm6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "msvcrt.dll"+8B158

"msvcrt.dll"+8B127: 66 0F 7F 07        -  movdqa [edi],xmm0
"msvcrt.dll"+8B12B: 66 0F 7F 4F 10     -  movdqa [edi+10],xmm1
"msvcrt.dll"+8B130: 66 0F 7F 57 20     -  movdqa [edi+20],xmm2
"msvcrt.dll"+8B135: 66 0F 7F 5F 30     -  movdqa [edi+30],xmm3
"msvcrt.dll"+8B13A: 66 0F 6F 66 40     -  movdqa xmm4,[esi+40]
"msvcrt.dll"+8B13F: 66 0F 6F 6E 50     -  movdqa xmm5,[esi+50]
"msvcrt.dll"+8B144: 66 0F 6F 76 60     -  movdqa xmm6,[esi+60]
"msvcrt.dll"+8B149: 66 0F 6F 7E 70     -  movdqa xmm7,[esi+70]
"msvcrt.dll"+8B14E: 66 0F 7F 67 40     -  movdqa [edi+40],xmm4
"msvcrt.dll"+8B153: 66 0F 7F 6F 50     -  movdqa [edi+50],xmm5
// ---------- INJECTING HERE ----------
"msvcrt.dll"+8B158: 66 0F 7F 77 60     -  movdqa [edi+60],xmm6
// ---------- DONE INJECTING  ----------
"msvcrt.dll"+8B15D: 66 0F 7F 7F 70     -  movdqa [edi+70],xmm7
"msvcrt.dll"+8B162: 8D B6 80 00 00 00  -  lea esi,[esi+00000080]
"msvcrt.dll"+8B168: 8D BF 80 00 00 00  -  lea edi,[edi+00000080]
"msvcrt.dll"+8B16E: 49                 -  dec ecx
"msvcrt.dll"+8B16F: 75 A3              -  jne msvcrt.dll+8B114
"msvcrt.dll"+8B171: 8B 75 F8           -  mov esi,[ebp-08]
"msvcrt.dll"+8B174: 8B 7D FC           -  mov edi,[ebp-04]
"msvcrt.dll"+8B177: 8B E5              -  mov esp,ebp
"msvcrt.dll"+8B179: 5D                 -  pop ebp
"msvcrt.dll"+8B17A: C3                 -  ret 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"Hacks"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>800080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Earn 1 Coin Set 9999"</Description>
          <LastState/>
          <Color>8000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 89 43 38 7E 48) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 43 38 7E 48

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+11E33D

"srb2win.exe"+11E31C: 8B 3B                    -  mov edi,[ebx]
"srb2win.exe"+11E31E: 85 FF                    -  test edi,edi
"srb2win.exe"+11E320: 74 49                    -  je srb2win.exe+11E36B
"srb2win.exe"+11E322: 8B 4B 38                 -  mov ecx,[ebx+38]
"srb2win.exe"+11E325: 66 8B B3 2A 01 00 00     -  mov si,[ebx+0000012A]
"srb2win.exe"+11E32C: 89 D0                    -  mov eax,edx
"srb2win.exe"+11E32E: 01 D6                    -  add esi,edx
"srb2win.exe"+11E330: 01 C8                    -  add eax,ecx
"srb2win.exe"+11E332: 66 89 B3 2A 01 00 00     -  mov [ebx+0000012A],si
"srb2win.exe"+11E339: 66 3D 0F 27              -  cmp ax,270F
// ---------- INJECTING HERE ----------
"srb2win.exe"+11E33D: 66 89 43 38              -  mov [ebx+38],ax
"srb2win.exe"+11E341: 7E 48                    -  jle srb2win.exe+11E38B
// ---------- DONE INJECTING  ----------
"srb2win.exe"+11E343: 66 C7 43 38 0F 27        -  mov word ptr [ebx+38],270F
"srb2win.exe"+11E349: A0 80 13 80 00           -  mov al,[srb2win.exe+401380]
"srb2win.exe"+11E34E: 0A 05 2C 13 80 00        -  or al,[srb2win.exe+40132C]
"srb2win.exe"+11E354: 75 15                    -  jne srb2win.exe+11E36B
"srb2win.exe"+11E356: 0F BF 05 06 9A 63 00     -  movsx eax,word ptr [srb2win.exe+239A06]
"srb2win.exe"+11E35D: 89 04 24                 -  mov [esp],eax
"srb2win.exe"+11E360: E8 AB 8D F2 FF           -  call srb2win.exe+47110
"srb2win.exe"+11E365: 89 C6                    -  mov esi,eax
"srb2win.exe"+11E367: 85 C0                    -  test eax,eax
"srb2win.exe"+11E369: 74 2D                    -  je srb2win.exe+11E398
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"1 Ring get 99999999 Rings free"</Description>
          <LastState/>
          <Color>408080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-09
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 89 43 38 7E 48) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+38],(float)99999
  jle srb2win.exe+11E38B
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 43 38 7E 48

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+11E33D

"srb2win.exe"+11E31C: 8B 3B                    -  mov edi,[ebx]
"srb2win.exe"+11E31E: 85 FF                    -  test edi,edi
"srb2win.exe"+11E320: 74 49                    -  je srb2win.exe+11E36B
"srb2win.exe"+11E322: 8B 4B 38                 -  mov ecx,[ebx+38]
"srb2win.exe"+11E325: 66 8B B3 2A 01 00 00     -  mov si,[ebx+0000012A]
"srb2win.exe"+11E32C: 89 D0                    -  mov eax,edx
"srb2win.exe"+11E32E: 01 D6                    -  add esi,edx
"srb2win.exe"+11E330: 01 C8                    -  add eax,ecx
"srb2win.exe"+11E332: 66 89 B3 2A 01 00 00     -  mov [ebx+0000012A],si
"srb2win.exe"+11E339: 66 3D 0F 27              -  cmp ax,270F
// ---------- INJECTING HERE ----------
"srb2win.exe"+11E33D: 66 89 43 38              -  mov [ebx+38],ax
"srb2win.exe"+11E341: 7E 48                    -  jle srb2win.exe+11E38B
// ---------- DONE INJECTING  ----------
"srb2win.exe"+11E343: 66 C7 43 38 0F 27        -  mov word ptr [ebx+38],270F
"srb2win.exe"+11E349: A0 80 13 80 00           -  mov al,[srb2win.exe+401380]
"srb2win.exe"+11E34E: 0A 05 2C 13 80 00        -  or al,[srb2win.exe+40132C]
"srb2win.exe"+11E354: 75 15                    -  jne srb2win.exe+11E36B
"srb2win.exe"+11E356: 0F BF 05 06 9A 63 00     -  movsx eax,word ptr [srb2win.exe+239A06]
"srb2win.exe"+11E35D: 89 04 24                 -  mov [esp],eax
"srb2win.exe"+11E360: E8 AB 8D F2 FF           -  call srb2win.exe+47110
"srb2win.exe"+11E365: 89 C6                    -  mov esi,eax
"srb2win.exe"+11E367: 85 C0                    -  test eax,eax
"srb2win.exe"+11E369: 74 2D                    -  je srb2win.exe+11E398
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"Space AirTime"</Description>
          <LastState Value="0" RealAddress="059EC902"/>
          <Color>408080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>059EC902</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"Change Char(Record Attack)"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">1:Sonic
2:Tails
3:Knuckles
4:Amy
5:Fang
6:Metal Sonic
7:Unknown
</DropDownList>
          <LastState Value="1" RealAddress="0064CBB4"/>
          <Color>E95FA7</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+24CBB4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"No Drown"</Description>
          <LastState/>
          <Color>0080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 83 7D 60 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebp+60],(float)0
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 83 7D 60 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+D9999

"srb2win.exe"+D9967: 66 89 55 5A                 -  mov [ebp+5A],dx
"srb2win.exe"+D996B: 8B 95 08 01 00 00           -  mov edx,[ebp+00000108]
"srb2win.exe"+D9971: 85 D2                       -  test edx,edx
"srb2win.exe"+D9973: 0F 85 7B FB FF FF           -  jne srb2win.exe+D94F4
"srb2win.exe"+D9979: 8B 8D 90 00 00 00           -  mov ecx,[ebp+00000090]
"srb2win.exe"+D997F: 8B 15 8C C8 9E 05           -  mov edx,[srb2win.exe+55EC88C]
"srb2win.exe"+D9985: 81 E1 00 00 00 40           -  and ecx,40000000
"srb2win.exe"+D998B: 81 E2 00 06 00 00           -  and edx,00000600
"srb2win.exe"+D9991: 09 D1                       -  or ecx,edx
"srb2win.exe"+D9993: 0F 85 5B FB FF FF           -  jne srb2win.exe+D94F4
// ---------- INJECTING HERE ----------
"srb2win.exe"+D9999: 66 83 7D 60 00              -  cmp word ptr [ebp+60],00
// ---------- DONE INJECTING  ----------
"srb2win.exe"+D999E: 0F 85 56 FB FF FF           -  jne srb2win.exe+D94FA
"srb2win.exe"+D99A4: 66 8B 0D DA 99 63 00        -  mov cx,[srb2win.exe+2399DA]
"srb2win.exe"+D99AB: 8D 51 01                    -  lea edx,[ecx+01]
"srb2win.exe"+D99AE: 66 89 55 60                 -  mov [ebp+60],dx
"srb2win.exe"+D99B2: E9 43 FB FF FF              -  jmp srb2win.exe+D94FA
"srb2win.exe"+D99B7: F6 47 78 40                 -  test byte ptr [edi+78],40
"srb2win.exe"+D99BB: 0F 85 8B FB FF FF           -  jne srb2win.exe+D954C
"srb2win.exe"+D99C1: 8B 87 A0 00 00 00           -  mov eax,[edi+000000A0]
"srb2win.exe"+D99C7: F6 40 58 40                 -  test byte ptr [eax+58],40
"srb2win.exe"+D99CB: 0F 84 35 FE FF FF           -  je srb2win.exe+D9806
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Earn 1 Set 0 Coins"</Description>
          <LastState/>
          <Color>8000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-11
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,66 89 43 38 7E 48) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+38],(float)1
  jle srb2win.exe+11E38B
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 66 89 43 38 7E 48

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+11E33D

"srb2win.exe"+11E31C: 8B 3B                    -  mov edi,[ebx]
"srb2win.exe"+11E31E: 85 FF                    -  test edi,edi
"srb2win.exe"+11E320: 74 49                    -  je srb2win.exe+11E36B
"srb2win.exe"+11E322: 8B 4B 38                 -  mov ecx,[ebx+38]
"srb2win.exe"+11E325: 66 8B B3 2A 01 00 00     -  mov si,[ebx+0000012A]
"srb2win.exe"+11E32C: 89 D0                    -  mov eax,edx
"srb2win.exe"+11E32E: 01 D6                    -  add esi,edx
"srb2win.exe"+11E330: 01 C8                    -  add eax,ecx
"srb2win.exe"+11E332: 66 89 B3 2A 01 00 00     -  mov [ebx+0000012A],si
"srb2win.exe"+11E339: 66 3D 0F 27              -  cmp ax,270F
// ---------- INJECTING HERE ----------
"srb2win.exe"+11E33D: 66 89 43 38              -  mov [ebx+38],ax
"srb2win.exe"+11E341: 7E 48                    -  jle srb2win.exe+11E38B
// ---------- DONE INJECTING  ----------
"srb2win.exe"+11E343: 66 C7 43 38 0F 27        -  mov word ptr [ebx+38],270F
"srb2win.exe"+11E349: A0 80 13 80 00           -  mov al,[srb2win.exe+401380]
"srb2win.exe"+11E34E: 0A 05 2C 13 80 00        -  or al,[srb2win.exe+40132C]
"srb2win.exe"+11E354: 75 15                    -  jne srb2win.exe+11E36B
"srb2win.exe"+11E356: 0F BF 05 06 9A 63 00     -  movsx eax,word ptr [srb2win.exe+239A06]
"srb2win.exe"+11E35D: 89 04 24                 -  mov [esp],eax
"srb2win.exe"+11E360: E8 AB 8D F2 FF           -  call srb2win.exe+47110
"srb2win.exe"+11E365: 89 C6                    -  mov esi,eax
"srb2win.exe"+11E367: 85 C0                    -  test eax,eax
"srb2win.exe"+11E369: 74 2D                    -  je srb2win.exe+11E398
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>94</ID>
          <Description>"Mod Spoof?"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:True
1:False
</DropDownList>
          <LastState Value="0" RealAddress="059EC3EC"/>
          <Color>00FFFF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC3EC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>93</ID>
          <Description>"Shield Value"</Description>
          <LastState Value="0" RealAddress="059EC8FA"/>
          <Color>FF8000</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55EC8FA</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>88</ID>
          <Description>"Carry Value"</Description>
          <LastState Value="0" RealAddress="048B64C8"/>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+44B64C8</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"Trainer"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>00FF00</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>51</ID>
          <Description>"Statistics"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0080FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>52</ID>
              <Description>"Statistics Score"</Description>
              <Color>00FF80</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>"srb2win.exe"+003FF280</Address>
              <Offsets>
                <Offset>4</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Rings"</Description>
          <LastState Value="0" RealAddress="059EC8D8"/>
          <Color>F57A81</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55EC8D8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Score"</Description>
          <LastState Value="0" RealAddress="059EC948"/>
          <Color>D775EC</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55EC948</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>57</ID>
          <Description>"Lives"</Description>
          <LastState Value="0" RealAddress="059EC990"/>
          <Color>FF00FF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC990</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"Visual"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>FF00FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>29</ID>
              <Description>"Airjump"</Description>
              <LastState/>
              <Color>008000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : srb2win.exe
  Version:
  Date   : 2020-10-11
  Author : danie

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,C7 05 E0 CE 83 00 00 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [srb2win.exe+43CEE0],(byte)56
  jmp return

INJECT:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C7 05 E0 CE 83 00 00 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+119F12

"srb2win.exe"+119EEE: 75 0D                          -  jne srb2win.exe+119EFD
"srb2win.exe"+119EF0: 85 C0                          -  test eax,eax
"srb2win.exe"+119EF2: 74 1E                          -  je srb2win.exe+119F12
"srb2win.exe"+119EF4: F6 80 92 00 00 00 40           -  test byte ptr [eax+00000092],40
"srb2win.exe"+119EFB: 74 15                          -  je srb2win.exe+119F12
"srb2win.exe"+119EFD: 8B 41 18                       -  mov eax,[ecx+18]
"srb2win.exe"+119F00: 83 E2 20                       -  and edx,20
"srb2win.exe"+119F03: 0F 85 C6 03 00 00              -  jne srb2win.exe+11A2CF
"srb2win.exe"+119F09: 39 41 48                       -  cmp [ecx+48],eax
"srb2win.exe"+119F0C: 0F 8D CB 03 00 00              -  jnl srb2win.exe+11A2DD
// ---------- INJECTING HERE ----------
"srb2win.exe"+119F12: C7 05 E0 CE 83 00 00 00 00 00  -  mov [srb2win.exe+43CEE0],00000000
// ---------- DONE INJECTING  ----------
"srb2win.exe"+119F1C: C7 44 24 20 00 00 00 00        -  mov [esp+20],00000000
"srb2win.exe"+119F24: 89 0C 24                       -  mov [esp],ecx
"srb2win.exe"+119F27: C7 44 24 58 00 00 00 00        -  mov [esp+58],00000000
"srb2win.exe"+119F2F: C7 44 24 54 00 00 00 00        -  mov [esp+54],00000000
"srb2win.exe"+119F37: E8 84 74 FB FF                 -  call srb2win.exe+D13C0
"srb2win.exe"+119F3C: 0F BE C8                       -  movsx ecx,al
"srb2win.exe"+119F3F: C1 E1 10                       -  shl ecx,10
"srb2win.exe"+119F42: BA 56 55 55 55                 -  mov edx,55555556
"srb2win.exe"+119F47: 89 C8                          -  mov eax,ecx
"srb2win.exe"+119F49: F7 EA                          -  imul edx
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>85</ID>
          <Description>"Tokens"</Description>
          <LastState Value="0" RealAddress="059EBDA0"/>
          <Color>40FF00</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EBDA0</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"Stuff"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>808000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Air"</Description>
          <LastState Value="0" RealAddress="059EC900"/>
          <Color>FF00FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55EC900</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"Carry Value"</Description>
          <LastState Value="0" RealAddress="048B64C8"/>
          <Color>FF80FF</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+44B64C8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Tails AskFly Value"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:No
1:Yes
</DropDownList>
          <LastState Value="0" RealAddress="048B64C0"/>
          <Color>FFFF00</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+44B64C0</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>75</ID>
          <Description>"Sandbox Mode"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Off
1:On
</DropDownList>
          <LastState Value="0" RealAddress="0082DFAC"/>
          <Color>0080FF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+42DFAC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>87</ID>
          <Description>"AirTime"</Description>
          <LastState Value="0" RealAddress="059EC900"/>
          <Color>404080</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>srb2win.exe+55EC900</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>92</ID>
          <Description>"Developer Mode Value"</Description>
          <LastState Value="0" RealAddress="059EB504"/>
          <Color>FF00FF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EB504</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>91</ID>
          <Description>"Character Ability"</Description>
          <LastState Value="0" RealAddress="059EC95B"/>
          <Color>C08080</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC95B</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>70</ID>
      <Description>"Helper"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF8080</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>69</ID>
          <Description>"Inject In-Game Menu (System Only)"</Description>
          <LastState/>
          <Color>34BFCB</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
[ENABLE]
UDF4.show()


[DISABLE]
UDF4.hide()
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Mod Spoof"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:True
1:False
</DropDownList>
          <LastState Value="0" RealAddress="059EC3EC"/>
          <Color>4080FF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC3EC</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>74</ID>
          <Description>"Tails AI"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:False
1:True
</DropDownList>
          <LastState Value="0" RealAddress="059EC264"/>
          <Color>FF8000</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC264</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>72</ID>
          <Description>"Infinite Inject"</Description>
          <LastState Activated="1"/>
          <Color>C080FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}

[ENABLE]
if openProcess("srb2win.exe") == null then
     showMessage("Please Install OR Start SRB2. Thank you!")
   else
    showMessage("Injected!")
    openProcess("srb2win.exe")
  end

[DISABLE]
if openProcess("srb2win.exe") == null then
     showMessage("Please Install OR Start SRB2. Thank you!")
   else
    showMessage("Injected!")
    openProcess("srb2win.exe")
  end
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>100</ID>
          <Description>"Map Int"</Description>
          <LastState Value="99" RealAddress="00639A06"/>
          <Color>80FFFF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+239A06</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>89</ID>
          <Description>"End Level"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:False
1:Zoom Out End
2:Black Fade End
</DropDownList>
          <LastState Value="1" RealAddress="059EC8AC"/>
          <Color>8080FF</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC8AC</Address>
          <Hotkeys>
            <Hotkey>
              <Action>Set Value</Action>
              <Keys>
                <Key>17</Key>
                <Key>18</Key>
                <Key>76</Key>
              </Keys>
              <Value>2</Value>
              <ID>0</ID>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>83</ID>
          <Description>"SFX All Thok (May Crash)"</Description>
          <LastState/>
          <Color>800080</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-13
  Author : danie

  This script does blah blah blah
}

define(address,"msvcrt.dll"+7AE54)
define(bytes,88 08 FF 02 0F B6 C1)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  nop
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [eax],cl
  // inc [edx]
  // movzx eax,cl

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "msvcrt.dll"+7AE54

"msvcrt.dll"+7AE3A: 74 06              -  je msvcrt.dll+7AE42
"msvcrt.dll"+7AE3C: 83 7A 08 00        -  cmp dword ptr [edx+08],00
"msvcrt.dll"+7AE40: 74 35              -  je msvcrt.dll+7AE77
"msvcrt.dll"+7AE42: 8B 4A 04           -  mov ecx,[edx+04]
"msvcrt.dll"+7AE45: 8D 41 FF           -  lea eax,[ecx-01]
"msvcrt.dll"+7AE48: 89 42 04           -  mov [edx+04],eax
"msvcrt.dll"+7AE4B: 85 C9              -  test ecx,ecx
"msvcrt.dll"+7AE4D: 7E 0E              -  jle msvcrt.dll+7AE5D
"msvcrt.dll"+7AE4F: 8B 02              -  mov eax,[edx]
"msvcrt.dll"+7AE51: 8A 4D 08           -  mov cl,[ebp+08]
// ---------- INJECTING HERE ----------
"msvcrt.dll"+7AE54: 88 08              -  mov [eax],cl
"msvcrt.dll"+7AE56: FF 02              -  inc [edx]
"msvcrt.dll"+7AE58: 0F B6 C1           -  movzx eax,cl
// ---------- DONE INJECTING  ----------
"msvcrt.dll"+7AE5B: EB 0D              -  jmp msvcrt.dll+7AE6A
"msvcrt.dll"+7AE5D: 0F BE 45 08        -  movsx eax,byte ptr [ebp+08]
"msvcrt.dll"+7AE61: 52                 -  push edx
"msvcrt.dll"+7AE62: 50                 -  push eax
"msvcrt.dll"+7AE63: E8 D8 88 FF FF     -  call msvcrt.dll+73740
"msvcrt.dll"+7AE68: 59                 -  pop ecx
"msvcrt.dll"+7AE69: 59                 -  pop ecx
"msvcrt.dll"+7AE6A: 83 F8 FF           -  cmp eax,-01
"msvcrt.dll"+7AE6D: 75 08              -  jne msvcrt.dll+7AE77
"msvcrt.dll"+7AE6F: 8B 45 10           -  mov eax,[ebp+10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>118</ID>
          <Description>"Thok Win"</Description>
          <LastState/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2021-03-11
  Author : Tablet

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,89 83 90 00 00 00 E9 62) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ebx+00000090],(float)8
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 83 90 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: srb2win.exe+126613

srb2win.exe+1265E7: 8B 40 18              - mov eax,[eax+18]
srb2win.exe+1265EA: 85 C0                 - test eax,eax
srb2win.exe+1265EC: 74 0D                 - je srb2win.exe+1265FB
srb2win.exe+1265EE: 83 BB F4 01 00 00 00  - cmp dword ptr [ebx+000001F4],00
srb2win.exe+1265F5: 0F 84 51 01 00 00     - je srb2win.exe+12674C
srb2win.exe+1265FB: 89 1C 24              - mov [esp],ebx
srb2win.exe+1265FE: E8 5D A8 FF FF        - call srb2win.exe+120E60
srb2win.exe+126603: 8B 83 90 00 00 00     - mov eax,[ebx+00000090]
srb2win.exe+126609: 25 FF FF F9 FF        - and eax,FFF9FFFF
srb2win.exe+12660E: 0D 00 00 08 00        - or eax,00080000
// ---------- INJECTING HERE ----------
srb2win.exe+126613: 89 83 90 00 00 00     - mov [ebx+00000090],eax
// ---------- DONE INJECTING  ----------
srb2win.exe+126619: E9 62 EC FF FF        - jmp srb2win.exe+125280
srb2win.exe+12661E: 8B 7C 24 1C           - mov edi,[esp+1C]
srb2win.exe+126622: B9 02 00 00 00        - mov ecx,00000002
srb2win.exe+126627: 81 C7 C8 00 00 00     - add edi,000000C8
srb2win.exe+12662D: 8B 47 98              - mov eax,[edi-68]
srb2win.exe+126630: 89 C2                 - mov edx,eax
srb2win.exe+126632: C1 FA 1F              - sar edx,1F
srb2win.exe+126635: F7 F9                 - idiv ecx
srb2win.exe+126637: 89 47 98              - mov [edi-68],eax
srb2win.exe+12663A: 8B 47 9C              - mov eax,[edi-64]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>119</ID>
          <Description>"Thok"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Not Thoking
8:Thoking
</DropDownList>
          <LastState Value="0" RealAddress="059EC932"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>C08080</Color>
          <VariableType>Byte</VariableType>
          <Address>059EC932</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>120</ID>
          <Description>"Stutter"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:Not Stuttering
</DropDownList>
          <LastState Value="0" RealAddress="059EC8F8"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>0080FF</Color>
          <VariableType>Byte</VariableType>
          <Address>059EC8F8</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>124</ID>
          <Description>"Animation Number"</Description>
          <LastState Value="1" RealAddress="059EC934"/>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>A00000</Color>
          <VariableType>Byte</VariableType>
          <Address>059EC934</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Combat"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0080FF</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Godmode"</Description>
          <LastState/>
          <Color>00FFFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : srb2win.exe
  Version: 
  Date   : 2020-10-09
  Author : Lapide

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,srb2win.exe,0F BF 40 38 66 85 C0) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,(float)9999
  test ax,ax
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 0F BF 40 38 66 85 C0

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "srb2win.exe"+BCF0F

"srb2win.exe"+BCEE2: 89 04 24                          -  mov [esp],eax
"srb2win.exe"+BCEE5: E8 26 A2 F8 FF                    -  call srb2win.exe+47110
"srb2win.exe"+BCEEA: 85 C0                             -  test eax,eax
"srb2win.exe"+BCEEC: 0F 85 5B F3 FF FF                 -  jne srb2win.exe+BC24D
"srb2win.exe"+BCEF2: B8 0A 00 00 00                    -  mov eax,0000000A
"srb2win.exe"+BCEF7: E9 56 F3 FF FF                    -  jmp srb2win.exe+BC252
"srb2win.exe"+BCEFC: 8B 44 24 28                       -  mov eax,[esp+28]
"srb2win.exe"+BCF00: 66 83 78 5C 04                    -  cmp word ptr [eax+5C],04
"srb2win.exe"+BCF05: 0F 84 A7 00 00 00                 -  je srb2win.exe+BCFB2
"srb2win.exe"+BCF0B: 8B 44 24 28                       -  mov eax,[esp+28]
// ---------- INJECTING HERE ----------
"srb2win.exe"+BCF0F: 0F BF 40 38                       -  movsx eax,word ptr [eax+38]
"srb2win.exe"+BCF13: 66 85 C0                          -  test ax,ax
// ---------- DONE INJECTING  ----------
"srb2win.exe"+BCF16: 7F 6E                             -  jg srb2win.exe+BCF86
"srb2win.exe"+BCF18: 83 7C 24 38 00                    -  cmp dword ptr [esp+38],00
"srb2win.exe"+BCF1D: 89 54 24 2C                       -  mov [esp+2C],edx
"srb2win.exe"+BCF21: 75 31                             -  jne srb2win.exe+BCF54
"srb2win.exe"+BCF23: E8 F8 A2 F8 FF                    -  call srb2win.exe+47220
"srb2win.exe"+BCF28: 85 C0                             -  test eax,eax
"srb2win.exe"+BCF2A: 74 28                             -  je srb2win.exe+BCF54
"srb2win.exe"+BCF2C: 85 F6                             -  test esi,esi
"srb2win.exe"+BCF2E: 74 24                             -  je srb2win.exe+BCF54
"srb2win.exe"+BCF30: 8B 86 BC 00 00 00                 -  mov eax,[esi+000000BC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"Ability"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:None
1:Sonic
2:Tails
3:Knuckles
4:Special Attack
14:Fang
5:Metal Sonic(No Fly)
7:Metal Sonic
15:Amy
</DropDownList>
          <LastState Value="0" RealAddress="059EC95B"/>
          <Color>FBB5B3</Color>
          <VariableType>Byte</VariableType>
          <Address>srb2win.exe+55EC95B</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>112</ID>
          <Description>"FPS"</Description>
          <LastState RealAddress="0082F540"/>
          <Color>408080</Color>
          <VariableType>String</VariableType>
          <Length>2</Length>
          <Unicode>0</Unicode>
          <CodePage>0</CodePage>
          <ZeroTerminate>1</ZeroTerminate>
          <Address>srb2win.exe+42F540</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"CHEATENGINE"</Description>
      <Options moHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"CONFIG"</Description>
          <Options moHideChildren="1" moManualExpandCollapse="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>808040</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>33</ID>
              <Description>"Show Menu"</Description>
              <LastState/>
              <Color>C0C0C0</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}
[ENABLE]
UDF1.Show()

 
 
[DISABLE]
UDF1.Hide()

</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"Infinite Injection Menu"</Description>
              <LastState/>
              <Color>0080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}

[ENABLE]
UDF5.show()

[DISABLE]
UDF5.hide()
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"TopMost"</Description>
          <LastState/>
          <Color>ADED4E</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$lua}
l = getMainForm()
[ENABLE]
l.FormStyle = "fsSystemStayOnTop"

 
 
[DISABLE]
l.FormStyle = "fsNormal"
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"Menus"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>008080</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>115</ID>
              <Description>"ToolBox"</Description>
              <LastState/>
              <Color>FF0000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$lua}

[ENABLE]
UDF6.show()

[DISABLE]
UDF6.hide()
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>Credits:
Jisk/Cheat Table Maker
Lapide/Lua Maker
Yaro/Tester
</Comments>
  <LuaScript>local a = getAddressList()
form1 = getMainForm()
split = createSplitter(getMainForm())
split.Align = alRight
panel1 = createPanel(getMainForm())
panel1.Width = 180
panel1.Align = alRight
panel1.Caption = ''
about = createLabel(panel1)
about.caption = "This is a cheat for SRB2."
about.top = 90
about.font.height = 20
credits = createMenu
function cycleFullCompact(sender,force) getMainForm().Splitter1.Visible = state; getMainForm().Panel4.Visible    = state; getMainForm().Panel5.Visible = state; end; function addCompactMenu() if compactmenualreadyexists then return end; local parent = getMainForm().Menu.Items; compactmenualreadyexists = 'yes'; end; addCompactMenu(); cycleFullCompact(nil,true)
form1.caption = "SRB2 Hack V2"
form1.color = "$00FF2F2F"
form1.height = 500
form1.BorderStyle = "bsSingle"
form1.Position = "poDesktopCenter"
inject = createButton(panel1)
inject.Left = 15
inject.Height = 70
inject.Hint = 'Restart Cheat Engine\nto attach'
inject.Top = 10
inject.Width = 150
inject.Caption = 'Attach'
inject.ShowHint = false
inject.onclick = function()
 if openProcess("srb2win.exe") == null then
showMessage("Please Start SRB2.")
 else
openProcess("srb2win.exe")
inject.enabled = false
inject.caption = 'injected'
 end
end
inject.font.height = 50
if openProcess("srb2win.exe") == null then

  else
openProcess("srb2win.exe")
inject.enabled = false
inject.caption = 'Injected'
end
local rings = a.getMemoryRecordByDescription("Rings")
function UDF1_CEButton1Click(sender)
  if openProcess("srb2win.exe") == null then
     showMessage("Please Install OR Start SRB2. Thank you!")
   else
    showMessage("Injected!")
    openProcess("srb2win.exe")
  end
end
local int = getInternet()
local ICO = int.getURL("http://www.icons101.com/icons/48/Game_Stars_by_Yellow_Icon_Design/128/Sonic.png")
local IM = createStringStream(ICO)
int.Destroy()
local Pic = createPicture()
Pic.loadFromStream(IM)
local Bit = Pic.getBitmap()
getApplication().Icon = Bit
local slowmo = a.getMemoryRecordByDescription("SlowMo")
function UDF1_CECheckbox2Change(sender)
r = UDF1.CECheckbox2
if r.Checked == true then
slowmo.Active = true
else
slowmo.Active = false
end
end
local airjump = a.getMemoryRecordByDescription("Airjump")
function UDF1_CECheckbox1Change(sender)
r = UDF1.CECheckbox1
if r.Checked == true then
airjump.Active = true
else
airjump.Active = false
end
end
local rings = a.getMemoryRecordByDescription("Rings")
function UDF1_CEButton2Click(sender)
rings.value = rings.value + 1
end

local lives = a.getMemoryRecordByDescription('Lives')

function ingj()
loadstring(getInternet().getURL("https://raw.githubusercontent.com/adhptrh/ed3d/main/versions/ed3d_v1.lua"))()

local d3dobject = ed3d.createD3DHook()

d3dobject.createForm("f1","SRB2 Menu",350,170) -- formname,caption,width,height
d3dobject.createForm("f2","Miscs",200,300)
local godmode = a.getMemoryRecordByDescription('Godmode')
d3dobject.createButton("btn1","Increase Rings","f1",10,40)
d3dobject.createOnOffToggle('mi','Godmode','f2',10,40)
d3dobject.createOnOffToggle('mi1','Airjump','f2',10,80)
d3dobject.createButton("btn2","Increase Lives","f1",170,40)

d3dobject.onclick = function (sender,x,y)
   d3dobject.formDragToggleClick("f1",sender,x,y)
   d3dobject.formDragToggleClick("f2",sender,x,y) -- make the form drag mode if the form clicked

   d3dobject.buttonClicked(sender,"btn1","f1",function()
        rings.value = rings.value + 100
   end)

    d3dobject.OnOffToggleClicked(sender,"mi","f2",
      function()
      godmode.active = true
      end,
      function()
      godmode.active = false
      end
   )
   d3dobject.OnOffToggleClicked(sender,"mi1","f2",
      function()
      airjump.active = true
      end,
      function()
      airjump.active = false
      end
   )

   d3dobject.buttonClicked(sender,"btn2","f1",function()
        lives.value = lives.value + 1
   end)

end


d3dobject.onkeydown = function(vkey,char)
   d3dobject.guihideshow(81,vkey) --press ctrl + q to hide/show gui
end
end

function UDF4_CEButton1Click(sender)
ingj()
end

function UDF5_CEPanel1Click(sender)
if openProcess("srb2win.exe") == null then
     showMessage("Please Install OR Start SRB2. Thank you!")
   else
    showMessage("Injected!")
    openProcess("srb2win.exe")
  end
end

function formdrag1d5820()
UDF7.dragNow()
end

function closeform1d5820()
os.exit()
end

function formdrag2d5820()
UDF7.dragNow()
end

function closeform2d5820()
os.exit()
end

function hexToRGB(hex)
         local r,g,b
         b = tonumber("0x"..hex:sub(1,2))
         g = tonumber("0x"..hex:sub(3,4))
         r = tonumber("0x"..hex:sub(5,6))
         return {r,g,b}
end

function rgbToHex(rgb)
         return string.format("%02X",rgb[3])..string.format("%02X",rgb[2])..string.format("%02X",rgb[1])
end

function round(num)
         return math.floor(num+.5)
end
local fromColor1 = {};local toColor1 = {};local colorSpeed1 = {r,g,b};local transitionTarget1;local speeeeeeed1 = 0;local speedc1 = 0;local transitionOption1 = {completeOldColor = true}function transitionTimer1(sender)         transitionTarget1.bevelcolor = "0x"..rgbToHex(fromColor1);         fromColor1[1] = fromColor1[1] + colorSpeed1.r;         fromColor1[2] = fromColor1[2] + colorSpeed1.g;         fromColor1[3] = fromColor1[3] + colorSpeed1.b;         speedc1 = speedc1+1;         if speedc1 &gt;= speeeeeeed1 then transitionTarget1.bevelcolor = "0x"..rgbToHex(toColor1) speedc1 = 0 transitionColor1.enabled = false return end;end;if transitionColor1 == nil then transitionColor1 = createTimer(nil) end;transitionColor1.interval = 1;transitionColor1.ontimer = transitionTimer1;transitionColor1.enabled = false;function gotoColor1(object, color, speed)         speedc1 = 0;         speeeeeeed1 = speed;         if transitionOption1.completeOldColor then            if transitionTarget1 ~= nil then transitionTarget1.bevelcolor = "0x"..rgbToHex(toColor1) end;         end         transitionTarget1 = object;         fromColor1 = hexToRGB(string.format("%06X",object.bevelcolor));         toColor1 = color;         colorSpeed1.r = round((toColor1[1]-fromColor1[1])/speed);         colorSpeed1.g = round((toColor1[2]-fromColor1[2])/speed);         colorSpeed1.b = round((toColor1[3]-fromColor1[3])/speed);         transitionColor1.enabled = true;end
local fromColor2 = {};local toColor2 = {};local colorSpeed2 = {r,g,b};local transitionTarget2;local speeeeeeed2 = 0;local speedc2 = 0;local transitionOption2 = {completeOldColor = true}function transitionTimer2(sender)         transitionTarget2.color = "0x"..rgbToHex(fromColor2);         fromColor2[1] = fromColor2[1] + colorSpeed2.r;         fromColor2[2] = fromColor2[2] + colorSpeed2.g;         fromColor2[3] = fromColor2[3] + colorSpeed2.b;         speedc2 = speedc2+1;         if speedc2 &gt;= speeeeeeed2 then transitionTarget2.color = "0x"..rgbToHex(toColor2) speedc2 = 0 transitionColor2.enabled = false return end;end;if transitionColor2 == nil then transitionColor2 = createTimer(nil) end;transitionColor2.interval = 1;transitionColor2.ontimer = transitionTimer2;transitionColor2.enabled = false;function gotoColor2(object, color, speed)         speedc2 = 0;         speeeeeeed2 = speed;         if transitionOption2.completeOldColor then            if transitionTarget2 ~= nil then transitionTarget2.color = "0x"..rgbToHex(toColor2) end;         end         transitionTarget2 = object;         fromColor2 = hexToRGB(string.format("%06X",object.color));         toColor2 = color;         colorSpeed2.r = round((toColor2[1]-fromColor2[1])/speed);         colorSpeed2.g = round((toColor2[2]-fromColor2[2])/speed);         colorSpeed2.b = round((toColor2[3]-fromColor2[3])/speed);         transitionColor2.enabled = true;end

function formdrag3d5820()
UDF7.dragNow()
end

function closeform3d5820()
os.exit()
end

function formdrag4d5820()
UDF7.dragNow()
end

function closeform4d5820()
os.exit()
end

function formdrag5d5820()
UDF7.dragNow()
end

function closeform5d5820()
os.exit()
end

function formdrag6d5820()
UDF7.dragNow()
end

function closeform6d5820()
os.exit()
end

function formdrag7d5820()
UDF7.dragNow()
end

function closeform7d5820()
os.exit()
end

function formdrag8d5820()
UDF7.dragNow()
end

function closeform8d5820()
os.exit()
end

function formdrag9d5820()
UDF7.dragNow()
end

function closeform9d5820()
os.exit()
end

function formdrag10d5820()
UDF6.dragNow()
end

function closeform10d5820()
os.exit()
end

function formdrag11d5820()
UDF6.dragNow()
end

function closeform11d5820()
os.exit()
end

function pfbutton_down12d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up12d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down13d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up13d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down14d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up14d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down15d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up15d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function formdrag16d5820()
UDF6.dragNow()
end

function closeform16d5820()
os.exit()
end

function formdrag17d5820()
UDF6.dragNow()
end

function closeform17d5820()
os.exit()
end

function pfbutton_down18d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up18d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down19d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up19d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down20d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up20d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down21d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up21d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down22d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up22d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down23d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up23d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down24d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up24d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function pfbutton_down25d5820(sender, button, x, y)
sender.color = 0xD36F70
sender.font.color = 0xFFFFFF
end

function pfbutton_up25d5820(sender, button, x, y)
sender.color = 0x1e1e1e
sender.font.color = 0xc0c0c0
end

function cbmousedown26d5820(sender, button, x, y)
if UDF6.cbbox26d5820.wordwrap == false then
   UDF6.cbbox26d5820.wordwrap = true
   UDF6.cbbox26d5820.color = 0xD36F70
else
   UDF6.cbbox26d5820.wordwrap = false
   UDF6.cbbox26d5820.color = 0x1e1e1e
end
end

function cbmousedown27d5820(sender, button, x, y)
if UDF6.cbbox27d5820.wordwrap == false then
   UDF6.cbbox27d5820.wordwrap = true
   UDF6.cbbox27d5820.color = 0xD36F70
else
   UDF6.cbbox27d5820.wordwrap = false
   UDF6.cbbox27d5820.color = 0x1e1e1e
end
end
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"srb2win.exe"+88874</Address>
      <Comment>0
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
